name: SendX CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
        
  build-and-push:
    needs: test
    if: github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      if: github.event_name == 'release'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name == 'release' }}
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/sendx:latest,${{ secrets.DOCKERHUB_USERNAME }}/sendx:${{ github.ref_name }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-cloud-run:
    needs: build-and-push
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
    
    - name: 'Deploy to Cloud Run'
      run: |
        gcloud run deploy sendx \
          --image docker.io/${{ secrets.DOCKERHUB_USERNAME }}/sendx:${{ github.ref_name }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --set-env-vars="STORAGE_TYPE=${{ secrets.STORAGE_TYPE }},REDIS_URL=${{ secrets.REDIS_URL }},SECRET_KEY=${{ secrets.SECRET_KEY }}"
